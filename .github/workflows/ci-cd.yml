name: CI/CD Pipeline for Angular App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        continue-on-error: true

      - name: Build Angular app
        run: npm run build -- --configuration production

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_SSH_KEY" | tr -d '\r' > ssh_key
          chmod 600 ssh_key
          ls -la ssh_key
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST \
            "mkdir -p /home/ec2-user/datakavachfrontend/backup && \
             mkdir -p /home/ec2-user/datakavachfrontend/datakawach/dist/hrkui"
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST \
            "if [ -d /home/ec2-user/datakavachfrontend/datakawach/dist ]; then \
               mv /home/ec2-user/datakavachfrontend/datakawach/dist \
               /home/ec2-user/datakavachfrontend/backup/dist-$(date +%s); \
             fi"
          scp -i ssh_key -r dist/hrkui/* $EC2_USER@$EC2_HOST:/home/ec2-user/datakavachfrontend/datakawach/dist/hrkui
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST \
            "if [ -f /home/ec2-user/datakavachfrontend/datakawach/dist/hrkui/index.html ]; then \
               curl -f https://datakavach.com || exit 1; \
               echo 'Deployment successful'; \
               sudo systemctl reload nginx; \
             else \
               echo 'Deployment failed'; \
               exit 1; \
             fi"

      - name: Rollback on failure
        if: failure()
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_SSH_KEY" | tr -d '\r' > ssh_key
          chmod 600 ssh_key
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST \
            "mkdir -p /home/ec2-user/datakavachfrontend/backup && \
             rm -rf /home/ec2-user/datakavachfrontend/datakawach/dist && \
             if [ -n \"\$(ls -t /home/ec2-user/datakavachfrontend/backup | head -n1)\" ]; then \
               mv /home/ec2-user/datakavachfrontend/backup/dist-\$(ls -t /home/ec2-user/datakavachfrontend/backup | head -n1) \
               /home/ec2-user/datakavachfrontend/datakawach/dist && \
               sudo systemctl reload nginx; \
             else \
               echo 'No backup available to restore'; \
             fi"
