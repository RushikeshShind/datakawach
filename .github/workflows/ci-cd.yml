name: üöÄ CI/CD Pipeline for Angular App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üß™ Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        continue-on-error: true

      - name: üèóÔ∏è Build Angular app
        run: npm run build -- --configuration production

      - name: üöÄ Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # üîê Decode and prepare SSH key
          echo "$EC2_SSH_KEY" | base64 -d > ssh_key
          chmod 600 ssh_key

          echo "üìÅ Creating necessary directories on EC2..."
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST '
            mkdir -p /home/ec2-user/datakavachfrontend/backup &&
            mkdir -p /home/ec2-user/datakavachfrontend/datakawach/dist &&
            echo "‚úÖ Directories ready."'

          echo "üóÉÔ∏è Backing up old build if it exists..."
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST '
            if [ -d /home/ec2-user/datakavachfrontend/datakawach/dist/hrkui ]; then
              timestamp=$(date +%s)
              mv /home/ec2-user/datakavachfrontend/datakawach/dist/hrkui /home/ec2-user/datakavachfrontend/backup/hrkui-$timestamp
              echo "‚úÖ Backup created: hrkui-$timestamp"
            fi'

          echo "üì§ Uploading new build to EC2..."
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST 'mkdir -p /home/ec2-user/datakavachfrontend/datakawach/dist/hrkui'
          scp -i ssh_key -r dist/hrkui/* $EC2_USER@$EC2_HOST:/home/ec2-user/datakavachfrontend/datakawach/dist/hrkui

          echo "üîÅ Validating and restarting NGINX..."
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST '
            if [ -f /home/ec2-user/datakavachfrontend/datakawach/dist/hrkui/index.html ]; then
              echo "‚úÖ Deployment successful"
              sudo systemctl reload nginx
            else
              echo "‚ùå Deployment failed - index.html missing"
              exit 1
            fi'

  rollback-if-failed:
    needs: build-and-deploy
    if: failure()
    runs-on: ubuntu-latest

    steps:
      - name: üîê Setup SSH Key
        run: |
          echo "$EC2_SSH_KEY" | base64 -d > ssh_key
          chmod 600 ssh_key
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: ‚ôªÔ∏è Rollback to previous backup
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "üõë Deploy failed, starting rollback..."
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST '
            latest_backup=$(ls -td /home/ec2-user/datakavachfrontend/backup/hrkui-* 2>/dev/null | head -n1)
            if [ -n "$latest_backup" ]; then
              rm -rf /home/ec2-user/datakavachfrontend/datakawach/dist/hrkui
              cp -r $latest_backup /home/ec2-user/datakavachfrontend/datakawach/dist/hrkui
              sudo systemctl reload nginx
              echo "‚úÖ Rollback successful: restored from $latest_backup"
            else
              echo "‚ùå No backup found to rollback."
              exit 1
            fi'
